{"version":3,"sources":["components/sketch.js","components/plot.js","components/plotter.js","components/MathVizComp.js","App.js","serviceWorker.js","index.js"],"names":["Sketch","props","p5","sketch","x","y","vx","vy","setup","createCanvas","frameRate","draw","background","bg","fill","noStroke","type","ellipse","rect","fps","stroke","text","toFixed","id","className","Plot","h","height","amplitude","TWO_PI","wavelength","width","line","xd","delta","src","sin","des","Wave","lambda","map","wave","i","tabInputRef","modInputRef","offsetInputRef","coords","table","mul","r","window","innerWidth","count","myp5","getCoords","Math","PI","cos","strokeWeight","o","d","noLoop","clearCvs","resetCanvas","loop","onPresetSelect","val","value","class","min","placeholder","defaultValue","onChange","e","target","ref","input","step","onClick","MySketch","MyMathViz","App","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","initial","exact","path","component","Plotter","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4bf26f04.chunk.js","sourcesContent":["import React from 'react';\nimport p5 from 'p5';\nimport './sketch.css';\n\nconst Sketch = (props)=>{\n  const s = ( sketch ) => {\n    let x = 75;\n    let y = 75;\n    let vx = props.vx;\n    let vy = props.vy;\n  \n    sketch.setup = () => {\n      sketch.createCanvas(200, 200);\n      sketch.frameRate(60);\n    };\n    \n    const updateCoords = ()=>{      \n      if(vx){\n        x = x+vx;\n        if(x>200 || x<0){\n          vx = -1*vx\n        }\n      }\n      if(vy){\n        y = y+vy;\n        if(y>200 || y<0){\n          vy = -1*vy\n        }\n      }\n    }\n\n    sketch.draw = () => {\n      sketch.background(props.bg);\n      sketch.fill('blue');\n      sketch.noStroke();\n      if(props.type === \"ellipse\"){\n        sketch.ellipse(x,y,50,50)\n      }\n      else{\n        sketch.rect(x,y,50,50);\n      } \n      let fps = sketch.frameRate();\n      sketch.fill(0);\n      sketch.stroke(0);\n      sketch.text(\"FPS: \" + fps.toFixed(2), 10, 10);     \n      updateCoords()\n    };\n  };\n\n  let myp5 = new p5(s, 'sketch'+props.id);\n  return (\n    <div id={\"sketch\"+props.id} className=\"sketch\"></div>\n  );\n}\n\nexport default Sketch;\n","import React from 'react';\nimport p5 from 'p5';\nimport './sketch.css';\n\nconst Plot = (props)=>{\n  const s = ( sketch ) => {\n    let x = 0;\n    let h = props.height/2\n    let amplitude = props.amplitude;\n    let delta1 = sketch.TWO_PI / props.wavelength;\n    // let waves = [\n    //   {bg:\"lightblue\", lambda:300, amplitude: 150},\n    //   {bg:\"lightpink\", lambda:400, amplitude: 100}\n    // ];\n  \n    sketch.setup = () => {\n      sketch.createCanvas(props.width, props.height);\n      sketch.background(props.bg);\n      sketch.frameRate(60);\n      sketch.line(0, h, props.width, h);\n      sketch.stroke(0);\n      let count = 0;\n      sketch.text(\"0\", 0, h+10);\n      sketch.text(\"PI\", props.wavelength, h+10);\n      sketch.text(\"2PI\", 2*props.wavelength-20, h+10);  \n    };\n    \n\n    sketch.draw = () => {\n      // props.waves.map((wave,i)=>{        \n      sketch.stroke(100);\n      let xd = x + 2;\n      let delta = sketch.TWO_PI / props.wavelength;\n      let src = {x: x, y: h-props.amplitude*sketch.sin(x*delta)}\n      let des = {x: xd, y: h-props.amplitude*sketch.sin(xd*delta)}\n      sketch.line(src.x, src.y, des.x, des.y);\n      sketch.line(des.x, h, des.x, des.y);\n      sketch.noStroke()\n      // })\n      x = x + 2;\n    };\n  };\n\n  let myp5 = new p5(s, 'sketch'+props.id);\n  return (\n    <div id={\"sketch\"+props.id} className=\"sketch\"></div>\n  );\n}\n\nexport default Plot;\n","import React from 'react';\nimport Plot from './plot'\n\nconst Wave = () => {\n  let w = 600;\n  let h = 400;\n  let waves = [\n    {bg:\"lightblue\", lambda:300, amplitude: 150},\n    {bg:\"lightpink\", lambda:400, amplitude: 100}\n  ];\n\n  return(\n    <>\n      {\n        waves.map((wave, i)=>{\n          return <Plot id={i} bg={wave.bg} width={w} wavelength={wave.lambda} height={h} amplitude={wave.amplitude}/>\n        })\n      }\n    </>\n  )\n  // return <Plot id={3} bg={\"lightblue\"} width={600} wavelength={300} height={400} amplitude={150}/>\n}\n\nexport default Wave;","import React from 'react';\nimport p5 from 'p5';\nimport './sketch.css';\n\nconst bwcolors = {bg: \"black\", stroke: \"white\" }\nconst bluegoldcolors = {bg: \"#0095f6\", stroke: \"gold\" }\n\nconst Sketch = (props)=>{\n  let tabInputRef = null;\n  let modInputRef = null;\n  let offsetInputRef = null;\n  let ellipFacInputRef = null;\n  var coords = {}\n  let table = 2;\n  let mul = 250; //multiple\n  let offset = 100;\n  let ellip = 10;\n  let r = window.innerWidth < 500 ? window.innerWidth/2 : 250\n  let count = 0;\n\n  const s = ( sketch ) => {\n    sketch.getCoords = ()=>{\n      for(let i = 0; i<table*mul; i++){\n        let x = r + r * Math.sin(i*2*Math.PI/mul)\n        let y = r + r * Math.cos(i*2*Math.PI/mul)\n        // let tFactor = Math.cos(i*2*Math.PI/mul);\n        // let y = r + (r-ellip*10)\n        // y = tFactor < 0 ? y - offset : y + offset\n        // let y = i%2 == 1 ? r - 250 : r + 250; \n        \n        // sketch.ellipse(x,y,5)\n        let val = i;\n        coords[val] = {x:x, y:y}\n      }\n    }\n\n    sketch.setup = () => {\n      sketch.createCanvas(2*r, 2*r);\n      sketch.background(\"#fff\");\n      sketch.stroke(\"#000\");\n      sketch.strokeWeight(1)\n      sketch.getCoords()\n\n      for(let i = 0; i<mul; i++){\n        // let o = coords[i];\n        // let d = coords[table*i];\n        // sketch.line(o.x,o.y,d.x,d.y)\n      }\n    };\n\n    sketch.draw = () => {\n      if(count < mul){\n        // if(count%3 == 0){\n        //   sketch.stroke(\"red\")\n        // }\n        // else{\n        //   sketch.stroke(\"yellow\")\n        // }\n        let o = coords[count];\n        let d = coords[table*count];\n        sketch.line(o.x,o.y,d.x,d.y)\n        count = count + 1;\n      }\n      else{\n        sketch.noLoop()\n      }\n    };\n\n    sketch.clearCvs = ()=>{\n      sketch.background(\"#fff\");\n      for(let i = 0; i<mul; i++){\n        let o = coords[i];\n        // sketch.ellipse(o.x,o.y,5)\n      }\n    }\n  };\n\n  let myp5 = new p5(s, 'sketch'+props.id);\n  const resetCanvas = ()=>{\n    count = 0;\n    myp5.clearCvs();\n    myp5.loop();\n  }\n\n  // const onValSelect = ()=>{\n  //   myp5.getCoords();\n  //   resetCanvas();\n  // }\n\n  const onMulSelect = (val)=>{\n    modInputRef.value = val;\n    mul = val;\n    myp5.getCoords();\n    resetCanvas();\n  }\n\n  const onPresetSelect = (val)=>{\n    tabInputRef.value = val;\n    table = val;\n    myp5.getCoords();\n    resetCanvas();\n  }\n\n  const reDraw = (val)=>{\n    offsetInputRef.value = val;\n    offset = val\n    myp5.getCoords();\n    resetCanvas();\n  }\n\n  let hpresets = [11,21,31,41,51,61,71,81,91,101,111,121,131,141]\n  let cpresets = [6,16,26,36,46,56,66,76,86,96,106,116,126,136,146]\n\n  return (\n    <>\n      <div className=\"container row my-3\">\n        <div className=\"form-floating col-lg-5 align-items-center\">\n          <div class=\"input-group my-2\">\n            <span class=\"input-group-text\">Table to Visualize</span>\n            <input className=\"form-control text-center\" type=\"number\" min=\"2\" placeholder=\"Enter table\" id=\"numberEntry\"\n            defaultValue={table} onChange={(e)=>{onPresetSelect(e.target.value)}} ref={(input)=>{tabInputRef = input}}/>\n          </div>\n\n          <div class=\"input-group my-2 \">\n            <span class=\"input-group-text\">Points on circle</span>\n            <input className=\"form-control text-center\" type=\"number\" min=\"50\" step=\"10\" placeholder=\"Enter a the table\" id=\"numberEntry\"\n            defaultValue={mul} onChange={(e)=>{onMulSelect(e.target.value)}} ref={(input)=>{modInputRef = input}}/>\n          </div>\n\n          <div class=\"input-group my-2\">\n            <span class=\"input-group-text\">Offset</span>\n            <input className=\"form-control text-center\" type=\"number\" placeholder=\"Enter Offset\" id=\"numberEntry\"\n            defaultValue={table} onChange={(e)=>{reDraw(e.target.value)}} ref={(input)=>{offsetInputRef = input}}/>\n          </div>\n\n          <p className=\"h5 mt-5\">Few interesting presets</p>\n          <div className=\"col-12 rounded p-2 mt-2 border border-primary\">\n            {\n              hpresets.map((val)=>{\n                return <button className=\"btn btn-primary m-1\" onClick={()=>onPresetSelect(val)}>{val}</button>\n              })\n            }\n          </div>\n          <div className=\"col-12 rounded p-2 mt-2 border border-primary\">\n            {\n              cpresets.map((val)=>{\n                return <button className=\"btn btn-primary m-1\" onClick={()=>onPresetSelect(val)}>{val}</button>\n              })\n            }\n          </div>\n\n        </div>\n        <div id={\"sketch\"+props.id} className=\"sketch col-lg-7\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default Sketch;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Sketch from './components/sketch';\nimport Plotter from './components/plotter';\nimport MathViz from './components/MathVizComp';\n\nconst MySketch = ()=>{\n  return(\n    <>\n      <Sketch id={1} bg={\"lightpink\"} type={\"ellipse\"} vx={1} vy={2}/>\n      <Sketch id={2} bg={\"lightgreen\"} vx={2}/>\n    </>\n  )\n}\n\nconst MyMathViz = ()=>{\n  return(\n    <>\n      <MathViz id={2} bg={\"lightgreen\"} vx={2}/>\n    </>\n  )\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light mb-5\">\n          <a class=\"navbar-brand\" href=\"#\">BOOM</a>\n          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n            <ul class=\"navbar-nav\">\n              <li class=\"nav-item active\">\n                <a class=\"nav-link\" href=\"/plot\">Plot <span class=\"sr-only\">(current)</span></a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/sketch\">Sketch</a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n        <Router>\n          <Route initial exact path=\"/\" component={MyMathViz} />\n          <Route path=\"/plot\" component={Plotter} />\n          <Route path=\"/sketch\" component={MySketch} />\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}